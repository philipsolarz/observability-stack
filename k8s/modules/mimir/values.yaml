mimir-distributed:
  ###########################################################################
  # Object-storage: use the MinIO instance that is already running
  ###########################################################################
  minio:
    enabled: false
  mimir:
    structuredConfig:
      common:
        storage:
          backend: s3
          s3:
            endpoint: minio.minio.svc.cluster.local:9000
            bucket_name: mimir-tsdb
            access_key_id: C1DgC6XyEpQlUeTnXSt4
            secret_access_key: JdErHDxH7wy63QYN3UHFVTTJxfNeOw1XTtWRAgSg # for local testing
            insecure: true 
            http:
              insecure_skip_verify: true
      blocks_storage:
        backend: s3
        s3:
          endpoint: minio.minio.svc.cluster.local:9000
          bucket_name: mimir-tsdb
          access_key_id: C1DgC6XyEpQlUeTnXSt4
          secret_access_key: JdErHDxH7wy63QYN3UHFVTTJxfNeOw1XTtWRAgSg
          insecure: true 
          http:
            insecure_skip_verify: true
      alertmanager_storage:
        backend: s3
        s3:
          endpoint: minio.minio.svc.cluster.local:9000
          bucket_name: mimir-alerts
          access_key_id: C1DgC6XyEpQlUeTnXSt4
          secret_access_key: JdErHDxH7wy63QYN3UHFVTTJxfNeOw1XTtWRAgSg
          insecure: true 
          http:
            insecure_skip_verify: true
      ruler_storage:
        backend: s3
        s3:
          endpoint: minio.minio.svc.cluster.local:9000
          bucket_name: mimir-ruler
          access_key_id: C1DgC6XyEpQlUeTnXSt4
          secret_access_key: JdErHDxH7wy63QYN3UHFVTTJxfNeOw1XTtWRAgSg
          insecure: true 
          http:
            insecure_skip_verify: true

  alertmanager:
    replicas: 1
  distributor:
    replicas: 1
  ingester:
    replicas: 1
    zoneAwareReplication:
      enabled: false
  store_gateway:
    replicas: 1
    zoneAwareReplication:
      enabled: false
  querier:
    replicas: 1
  query_frontend:
    replicas: 1
  query_scheduler:
    enabled: false
  ruler:
    replicas: 1
  compactor:
    replicas: 1

  distributor:
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
  ingester:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
  querier:
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
  query_frontend:
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
  store_gateway:
    resources:
      requests:
        cpu: 50m
        memory: 256Mi
  compactor:
    resources:
      requests:
        cpu: 50m
        memory: 256Mi

  gateway:
    enabledNonEnterprise: true

    service:
      port: 80 

    ingress:
      enabled: true
      ingressClassName: traefik 
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web
      hosts:
        - host: mimir.localhost
          paths:
            - path: /
              pathType: Prefix 
      tls: []
